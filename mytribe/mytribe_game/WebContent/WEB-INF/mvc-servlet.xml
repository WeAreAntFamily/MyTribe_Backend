<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
   			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
        	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<mvc:annotation-driven />
	<!-- 配置控制器 -->
	<context:component-scan base-package="com" />
	<!-- 配置SpringMVC的视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
	</bean>
	<!-- 配置Springmvc的HttpMessageConvter -->
	<bean id="annotationMethodHandlerAdapter"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJackson" />
			</list>
		</property>
	</bean>
	<!-- 配置httpMessage转换器 -->
	<bean id="mappingJackson"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>

	<!-- 配置参数转换器 -->
<!-- 	<bean id="conversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.zpark.converter.String2User" />
			</list>
		</property>
	</bean> -->
<!-- 	<mvc:annotation-driven conversion-service="conversionService" /> -->

	<!-- 配置SpringMVC的拦截器 -->
	 <mvc:interceptors>
	 		<bean class="com.mytribe.net.CommonInterceptor" />
		<!--<mvc:interceptor >
			
			<mvc:mapping path="/*" />
			<bean class="com.mytribe.net.CommonInterceptor" />
		</mvc:interceptor>-->
	</mvc:interceptors> 

	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="102400000"></property>
	</bean>

	<!-- 异常处理 -->

	<bean id="handlerExceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.RuntimeException">errors/error</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="errors/error">500</prop>
			</props>
		</property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="errors/error"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>
	<!-- Spring mvc 静态资源处理 -->
	<mvc:default-servlet-handler />
	<bean id="scheduleTaskServiceTask" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean id="jobtask_deleteExpireActive1"
				class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<!-- 调用的类 -->
				<property name="targetObject">
					<ref bean="scheduleTaskService" />
				</property>
				<!-- 调用类中的方法 -->
				<property name="targetMethod">
					<value>send</value>
				</property>
			</bean>
		</property>
		<!-- cron表达式 -->
		<property name="cronExpression">
			<!-- 每天服务器时间12:00执行1次 -->
			<value>0 */1 * * * ?</value>
		</property>
	</bean>
	
	    <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
	<bean id="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="scheduleTaskServiceTask" />
            </list>
		</property>
	</bean>	
</beans>