<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">


	<!-- 阿里 druid 数据库连接池 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>/WEB-INF/db.properties</value>
		</property>
	</bean>
	<!--
		<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="location">
				<value>file:${catalina.base}/conf/db.properties</value>
			</property>
			<property name="ignoreResourceNotFound" value="false"></property>
			<property name="localOverride" value="true"></property>
		</bean>
-->
  
	<!-- Hikari Datasource -->  
	<bean id="strategy_dataSource" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="shutdown">  
		<property name="driverClassName" value="${strategy.driver}" /> <!-- 无需指定，除非系统无法自动识别 -->  
		<property name="jdbcUrl" value="${strategy.url}" />  
		<property name="username" value="${strategy.username}" />  
		<property name="password" value="${strategy.password}" />  
		<!-- 连接只读数据库时配置为true， 保证安全 -->  
		<property name="readOnly" value="${strategy.readOnly}" />  
		<!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->  
		<property name="connectionTimeout" value="${strategy.connectionTimeout}" />  
		<!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->  
		<property name="idleTimeout" value="${strategy.idleTimeout}" />  
		<!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->  
		<property name="maxLifetime" value="${strategy.maxLifetime}" />  
		<!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->  
		<property name="maximumPoolSize" value="${strategy.maximumPoolSize}" />  
	</bean>
	
	
	
	<!-- Hikari Datasource -->  
	<bean id="setting" class="com.mytribe.setting.WebSystemSetting">  
		<property name="userRequestUrl" value="${user.requesturl}" />  
	</bean>
		

	<bean id="strategy_SessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
		<property name="dataSource" ref="strategy_dataSource" />
		<!-- 自动扫描me/gacl/mapping/目录下的所有SQL映射的xml文件, 省掉Configuration.xml里的手工配置 
			value="classpath:me/gacl/mapping/*.xml"指的是classpath(类路径)下me.gacl.mapping包中的所有xml文件 
			UserMapper.xml位于me.gacl.mapping包下，这样UserMapper.xml就可以被自动扫描 -->

		<property name="mapperLocations" value="classpath:/com/mytribe/db/xml/strategy/*.xml" />
	</bean>
	<bean id="strategy_mapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 -->
		<property name="basePackage" value="com.mytribe.db.mapper.strategy" />
		<property name="sqlSessionFactoryBeanName" value="strategy_SessionFactory" />
	</bean>

		
</beans>   