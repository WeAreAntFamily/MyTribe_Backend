package com.mytribe.db.entity.strategy;

import java.util.ArrayList;
import java.util.List;

public class PlayerInfoEntityExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	public PlayerInfoEntityExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andPlayeridIsNull() {
			addCriterion("PlayerID is null");
			return (Criteria) this;
		}

		public Criteria andPlayeridIsNotNull() {
			addCriterion("PlayerID is not null");
			return (Criteria) this;
		}

		public Criteria andPlayeridEqualTo(Integer value) {
			addCriterion("PlayerID =", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridNotEqualTo(Integer value) {
			addCriterion("PlayerID <>", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridGreaterThan(Integer value) {
			addCriterion("PlayerID >", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridGreaterThanOrEqualTo(Integer value) {
			addCriterion("PlayerID >=", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridLessThan(Integer value) {
			addCriterion("PlayerID <", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridLessThanOrEqualTo(Integer value) {
			addCriterion("PlayerID <=", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridIn(List<Integer> values) {
			addCriterion("PlayerID in", values, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridNotIn(List<Integer> values) {
			addCriterion("PlayerID not in", values, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridBetween(Integer value1, Integer value2) {
			addCriterion("PlayerID between", value1, value2, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridNotBetween(Integer value1, Integer value2) {
			addCriterion("PlayerID not between", value1, value2, "playerid");
			return (Criteria) this;
		}

		public Criteria andNicknameIsNull() {
			addCriterion("Nickname is null");
			return (Criteria) this;
		}

		public Criteria andNicknameIsNotNull() {
			addCriterion("Nickname is not null");
			return (Criteria) this;
		}

		public Criteria andNicknameEqualTo(String value) {
			addCriterion("Nickname =", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotEqualTo(String value) {
			addCriterion("Nickname <>", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameGreaterThan(String value) {
			addCriterion("Nickname >", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameGreaterThanOrEqualTo(String value) {
			addCriterion("Nickname >=", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameLessThan(String value) {
			addCriterion("Nickname <", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameLessThanOrEqualTo(String value) {
			addCriterion("Nickname <=", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameLike(String value) {
			addCriterion("Nickname like", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotLike(String value) {
			addCriterion("Nickname not like", value, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameIn(List<String> values) {
			addCriterion("Nickname in", values, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotIn(List<String> values) {
			addCriterion("Nickname not in", values, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameBetween(String value1, String value2) {
			addCriterion("Nickname between", value1, value2, "nickname");
			return (Criteria) this;
		}

		public Criteria andNicknameNotBetween(String value1, String value2) {
			addCriterion("Nickname not between", value1, value2, "nickname");
			return (Criteria) this;
		}

		public Criteria andGradeIsNull() {
			addCriterion("Grade is null");
			return (Criteria) this;
		}

		public Criteria andGradeIsNotNull() {
			addCriterion("Grade is not null");
			return (Criteria) this;
		}

		public Criteria andGradeEqualTo(Integer value) {
			addCriterion("Grade =", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeNotEqualTo(Integer value) {
			addCriterion("Grade <>", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeGreaterThan(Integer value) {
			addCriterion("Grade >", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeGreaterThanOrEqualTo(Integer value) {
			addCriterion("Grade >=", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeLessThan(Integer value) {
			addCriterion("Grade <", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeLessThanOrEqualTo(Integer value) {
			addCriterion("Grade <=", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeIn(List<Integer> values) {
			addCriterion("Grade in", values, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeNotIn(List<Integer> values) {
			addCriterion("Grade not in", values, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeBetween(Integer value1, Integer value2) {
			addCriterion("Grade between", value1, value2, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeNotBetween(Integer value1, Integer value2) {
			addCriterion("Grade not between", value1, value2, "grade");
			return (Criteria) this;
		}

		public Criteria andCurrentexpIsNull() {
			addCriterion("CurrentExp is null");
			return (Criteria) this;
		}

		public Criteria andCurrentexpIsNotNull() {
			addCriterion("CurrentExp is not null");
			return (Criteria) this;
		}

		public Criteria andCurrentexpEqualTo(Integer value) {
			addCriterion("CurrentExp =", value, "currentexp");
			return (Criteria) this;
		}

		public Criteria andCurrentexpNotEqualTo(Integer value) {
			addCriterion("CurrentExp <>", value, "currentexp");
			return (Criteria) this;
		}

		public Criteria andCurrentexpGreaterThan(Integer value) {
			addCriterion("CurrentExp >", value, "currentexp");
			return (Criteria) this;
		}

		public Criteria andCurrentexpGreaterThanOrEqualTo(Integer value) {
			addCriterion("CurrentExp >=", value, "currentexp");
			return (Criteria) this;
		}

		public Criteria andCurrentexpLessThan(Integer value) {
			addCriterion("CurrentExp <", value, "currentexp");
			return (Criteria) this;
		}

		public Criteria andCurrentexpLessThanOrEqualTo(Integer value) {
			addCriterion("CurrentExp <=", value, "currentexp");
			return (Criteria) this;
		}

		public Criteria andCurrentexpIn(List<Integer> values) {
			addCriterion("CurrentExp in", values, "currentexp");
			return (Criteria) this;
		}

		public Criteria andCurrentexpNotIn(List<Integer> values) {
			addCriterion("CurrentExp not in", values, "currentexp");
			return (Criteria) this;
		}

		public Criteria andCurrentexpBetween(Integer value1, Integer value2) {
			addCriterion("CurrentExp between", value1, value2, "currentexp");
			return (Criteria) this;
		}

		public Criteria andCurrentexpNotBetween(Integer value1, Integer value2) {
			addCriterion("CurrentExp not between", value1, value2, "currentexp");
			return (Criteria) this;
		}

		public Criteria andMedalnumIsNull() {
			addCriterion("MedalNum is null");
			return (Criteria) this;
		}

		public Criteria andMedalnumIsNotNull() {
			addCriterion("MedalNum is not null");
			return (Criteria) this;
		}

		public Criteria andMedalnumEqualTo(Integer value) {
			addCriterion("MedalNum =", value, "medalnum");
			return (Criteria) this;
		}

		public Criteria andMedalnumNotEqualTo(Integer value) {
			addCriterion("MedalNum <>", value, "medalnum");
			return (Criteria) this;
		}

		public Criteria andMedalnumGreaterThan(Integer value) {
			addCriterion("MedalNum >", value, "medalnum");
			return (Criteria) this;
		}

		public Criteria andMedalnumGreaterThanOrEqualTo(Integer value) {
			addCriterion("MedalNum >=", value, "medalnum");
			return (Criteria) this;
		}

		public Criteria andMedalnumLessThan(Integer value) {
			addCriterion("MedalNum <", value, "medalnum");
			return (Criteria) this;
		}

		public Criteria andMedalnumLessThanOrEqualTo(Integer value) {
			addCriterion("MedalNum <=", value, "medalnum");
			return (Criteria) this;
		}

		public Criteria andMedalnumIn(List<Integer> values) {
			addCriterion("MedalNum in", values, "medalnum");
			return (Criteria) this;
		}

		public Criteria andMedalnumNotIn(List<Integer> values) {
			addCriterion("MedalNum not in", values, "medalnum");
			return (Criteria) this;
		}

		public Criteria andMedalnumBetween(Integer value1, Integer value2) {
			addCriterion("MedalNum between", value1, value2, "medalnum");
			return (Criteria) this;
		}

		public Criteria andMedalnumNotBetween(Integer value1, Integer value2) {
			addCriterion("MedalNum not between", value1, value2, "medalnum");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_u_playerinfo
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mt_u_playerinfo
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}