package com.mytribe.db.entity.strategy;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class EquipTypeTemplateExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	public EquipTypeTemplateExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("\"Name\" is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("\"Name\" is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("\"Name\" =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("\"Name\" <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("\"Name\" >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("\"Name\" >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("\"Name\" <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("\"Name\" <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("\"Name\" like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("\"Name\" not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("\"Name\" in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("\"Name\" not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("\"Name\" between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("\"Name\" not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andStarIsNull() {
			addCriterion("Star is null");
			return (Criteria) this;
		}

		public Criteria andStarIsNotNull() {
			addCriterion("Star is not null");
			return (Criteria) this;
		}

		public Criteria andStarEqualTo(Integer value) {
			addCriterion("Star =", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarNotEqualTo(Integer value) {
			addCriterion("Star <>", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarGreaterThan(Integer value) {
			addCriterion("Star >", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarGreaterThanOrEqualTo(Integer value) {
			addCriterion("Star >=", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarLessThan(Integer value) {
			addCriterion("Star <", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarLessThanOrEqualTo(Integer value) {
			addCriterion("Star <=", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarIn(List<Integer> values) {
			addCriterion("Star in", values, "star");
			return (Criteria) this;
		}

		public Criteria andStarNotIn(List<Integer> values) {
			addCriterion("Star not in", values, "star");
			return (Criteria) this;
		}

		public Criteria andStarBetween(Integer value1, Integer value2) {
			addCriterion("Star between", value1, value2, "star");
			return (Criteria) this;
		}

		public Criteria andStarNotBetween(Integer value1, Integer value2) {
			addCriterion("Star not between", value1, value2, "star");
			return (Criteria) this;
		}

		public Criteria andEquippartIsNull() {
			addCriterion("EquipPart is null");
			return (Criteria) this;
		}

		public Criteria andEquippartIsNotNull() {
			addCriterion("EquipPart is not null");
			return (Criteria) this;
		}

		public Criteria andEquippartEqualTo(Integer value) {
			addCriterion("EquipPart =", value, "equippart");
			return (Criteria) this;
		}

		public Criteria andEquippartNotEqualTo(Integer value) {
			addCriterion("EquipPart <>", value, "equippart");
			return (Criteria) this;
		}

		public Criteria andEquippartGreaterThan(Integer value) {
			addCriterion("EquipPart >", value, "equippart");
			return (Criteria) this;
		}

		public Criteria andEquippartGreaterThanOrEqualTo(Integer value) {
			addCriterion("EquipPart >=", value, "equippart");
			return (Criteria) this;
		}

		public Criteria andEquippartLessThan(Integer value) {
			addCriterion("EquipPart <", value, "equippart");
			return (Criteria) this;
		}

		public Criteria andEquippartLessThanOrEqualTo(Integer value) {
			addCriterion("EquipPart <=", value, "equippart");
			return (Criteria) this;
		}

		public Criteria andEquippartIn(List<Integer> values) {
			addCriterion("EquipPart in", values, "equippart");
			return (Criteria) this;
		}

		public Criteria andEquippartNotIn(List<Integer> values) {
			addCriterion("EquipPart not in", values, "equippart");
			return (Criteria) this;
		}

		public Criteria andEquippartBetween(Integer value1, Integer value2) {
			addCriterion("EquipPart between", value1, value2, "equippart");
			return (Criteria) this;
		}

		public Criteria andEquippartNotBetween(Integer value1, Integer value2) {
			addCriterion("EquipPart not between", value1, value2, "equippart");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidIsNull() {
			addCriterion("AttackTypeID is null");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidIsNotNull() {
			addCriterion("AttackTypeID is not null");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidEqualTo(Integer value) {
			addCriterion("AttackTypeID =", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidNotEqualTo(Integer value) {
			addCriterion("AttackTypeID <>", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidGreaterThan(Integer value) {
			addCriterion("AttackTypeID >", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidGreaterThanOrEqualTo(Integer value) {
			addCriterion("AttackTypeID >=", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidLessThan(Integer value) {
			addCriterion("AttackTypeID <", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidLessThanOrEqualTo(Integer value) {
			addCriterion("AttackTypeID <=", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidIn(List<Integer> values) {
			addCriterion("AttackTypeID in", values, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidNotIn(List<Integer> values) {
			addCriterion("AttackTypeID not in", values, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidBetween(Integer value1, Integer value2) {
			addCriterion("AttackTypeID between", value1, value2, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidNotBetween(Integer value1, Integer value2) {
			addCriterion("AttackTypeID not between", value1, value2, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedIsNull() {
			addCriterion("MinAttackSpeed is null");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedIsNotNull() {
			addCriterion("MinAttackSpeed is not null");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedEqualTo(BigDecimal value) {
			addCriterion("MinAttackSpeed =", value, "minattackspeed");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedNotEqualTo(BigDecimal value) {
			addCriterion("MinAttackSpeed <>", value, "minattackspeed");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedGreaterThan(BigDecimal value) {
			addCriterion("MinAttackSpeed >", value, "minattackspeed");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("MinAttackSpeed >=", value, "minattackspeed");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedLessThan(BigDecimal value) {
			addCriterion("MinAttackSpeed <", value, "minattackspeed");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedLessThanOrEqualTo(BigDecimal value) {
			addCriterion("MinAttackSpeed <=", value, "minattackspeed");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedIn(List<BigDecimal> values) {
			addCriterion("MinAttackSpeed in", values, "minattackspeed");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedNotIn(List<BigDecimal> values) {
			addCriterion("MinAttackSpeed not in", values, "minattackspeed");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MinAttackSpeed between", value1, value2, "minattackspeed");
			return (Criteria) this;
		}

		public Criteria andMinattackspeedNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MinAttackSpeed not between", value1, value2, "minattackspeed");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedIsNull() {
			addCriterion("MaxAttackSpeed is null");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedIsNotNull() {
			addCriterion("MaxAttackSpeed is not null");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedEqualTo(BigDecimal value) {
			addCriterion("MaxAttackSpeed =", value, "maxattackspeed");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedNotEqualTo(BigDecimal value) {
			addCriterion("MaxAttackSpeed <>", value, "maxattackspeed");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedGreaterThan(BigDecimal value) {
			addCriterion("MaxAttackSpeed >", value, "maxattackspeed");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("MaxAttackSpeed >=", value, "maxattackspeed");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedLessThan(BigDecimal value) {
			addCriterion("MaxAttackSpeed <", value, "maxattackspeed");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedLessThanOrEqualTo(BigDecimal value) {
			addCriterion("MaxAttackSpeed <=", value, "maxattackspeed");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedIn(List<BigDecimal> values) {
			addCriterion("MaxAttackSpeed in", values, "maxattackspeed");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedNotIn(List<BigDecimal> values) {
			addCriterion("MaxAttackSpeed not in", values, "maxattackspeed");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MaxAttackSpeed between", value1, value2, "maxattackspeed");
			return (Criteria) this;
		}

		public Criteria andMaxattackspeedNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("MaxAttackSpeed not between", value1, value2, "maxattackspeed");
			return (Criteria) this;
		}

		public Criteria andMinattackIsNull() {
			addCriterion("MinAttack is null");
			return (Criteria) this;
		}

		public Criteria andMinattackIsNotNull() {
			addCriterion("MinAttack is not null");
			return (Criteria) this;
		}

		public Criteria andMinattackEqualTo(Integer value) {
			addCriterion("MinAttack =", value, "minattack");
			return (Criteria) this;
		}

		public Criteria andMinattackNotEqualTo(Integer value) {
			addCriterion("MinAttack <>", value, "minattack");
			return (Criteria) this;
		}

		public Criteria andMinattackGreaterThan(Integer value) {
			addCriterion("MinAttack >", value, "minattack");
			return (Criteria) this;
		}

		public Criteria andMinattackGreaterThanOrEqualTo(Integer value) {
			addCriterion("MinAttack >=", value, "minattack");
			return (Criteria) this;
		}

		public Criteria andMinattackLessThan(Integer value) {
			addCriterion("MinAttack <", value, "minattack");
			return (Criteria) this;
		}

		public Criteria andMinattackLessThanOrEqualTo(Integer value) {
			addCriterion("MinAttack <=", value, "minattack");
			return (Criteria) this;
		}

		public Criteria andMinattackIn(List<Integer> values) {
			addCriterion("MinAttack in", values, "minattack");
			return (Criteria) this;
		}

		public Criteria andMinattackNotIn(List<Integer> values) {
			addCriterion("MinAttack not in", values, "minattack");
			return (Criteria) this;
		}

		public Criteria andMinattackBetween(Integer value1, Integer value2) {
			addCriterion("MinAttack between", value1, value2, "minattack");
			return (Criteria) this;
		}

		public Criteria andMinattackNotBetween(Integer value1, Integer value2) {
			addCriterion("MinAttack not between", value1, value2, "minattack");
			return (Criteria) this;
		}

		public Criteria andMaxattackIsNull() {
			addCriterion("MaxAttack is null");
			return (Criteria) this;
		}

		public Criteria andMaxattackIsNotNull() {
			addCriterion("MaxAttack is not null");
			return (Criteria) this;
		}

		public Criteria andMaxattackEqualTo(Integer value) {
			addCriterion("MaxAttack =", value, "maxattack");
			return (Criteria) this;
		}

		public Criteria andMaxattackNotEqualTo(Integer value) {
			addCriterion("MaxAttack <>", value, "maxattack");
			return (Criteria) this;
		}

		public Criteria andMaxattackGreaterThan(Integer value) {
			addCriterion("MaxAttack >", value, "maxattack");
			return (Criteria) this;
		}

		public Criteria andMaxattackGreaterThanOrEqualTo(Integer value) {
			addCriterion("MaxAttack >=", value, "maxattack");
			return (Criteria) this;
		}

		public Criteria andMaxattackLessThan(Integer value) {
			addCriterion("MaxAttack <", value, "maxattack");
			return (Criteria) this;
		}

		public Criteria andMaxattackLessThanOrEqualTo(Integer value) {
			addCriterion("MaxAttack <=", value, "maxattack");
			return (Criteria) this;
		}

		public Criteria andMaxattackIn(List<Integer> values) {
			addCriterion("MaxAttack in", values, "maxattack");
			return (Criteria) this;
		}

		public Criteria andMaxattackNotIn(List<Integer> values) {
			addCriterion("MaxAttack not in", values, "maxattack");
			return (Criteria) this;
		}

		public Criteria andMaxattackBetween(Integer value1, Integer value2) {
			addCriterion("MaxAttack between", value1, value2, "maxattack");
			return (Criteria) this;
		}

		public Criteria andMaxattackNotBetween(Integer value1, Integer value2) {
			addCriterion("MaxAttack not between", value1, value2, "maxattack");
			return (Criteria) this;
		}

		public Criteria andMinhpIsNull() {
			addCriterion("MinHP is null");
			return (Criteria) this;
		}

		public Criteria andMinhpIsNotNull() {
			addCriterion("MinHP is not null");
			return (Criteria) this;
		}

		public Criteria andMinhpEqualTo(Integer value) {
			addCriterion("MinHP =", value, "minhp");
			return (Criteria) this;
		}

		public Criteria andMinhpNotEqualTo(Integer value) {
			addCriterion("MinHP <>", value, "minhp");
			return (Criteria) this;
		}

		public Criteria andMinhpGreaterThan(Integer value) {
			addCriterion("MinHP >", value, "minhp");
			return (Criteria) this;
		}

		public Criteria andMinhpGreaterThanOrEqualTo(Integer value) {
			addCriterion("MinHP >=", value, "minhp");
			return (Criteria) this;
		}

		public Criteria andMinhpLessThan(Integer value) {
			addCriterion("MinHP <", value, "minhp");
			return (Criteria) this;
		}

		public Criteria andMinhpLessThanOrEqualTo(Integer value) {
			addCriterion("MinHP <=", value, "minhp");
			return (Criteria) this;
		}

		public Criteria andMinhpIn(List<Integer> values) {
			addCriterion("MinHP in", values, "minhp");
			return (Criteria) this;
		}

		public Criteria andMinhpNotIn(List<Integer> values) {
			addCriterion("MinHP not in", values, "minhp");
			return (Criteria) this;
		}

		public Criteria andMinhpBetween(Integer value1, Integer value2) {
			addCriterion("MinHP between", value1, value2, "minhp");
			return (Criteria) this;
		}

		public Criteria andMinhpNotBetween(Integer value1, Integer value2) {
			addCriterion("MinHP not between", value1, value2, "minhp");
			return (Criteria) this;
		}

		public Criteria andMaxhpIsNull() {
			addCriterion("MaxHP is null");
			return (Criteria) this;
		}

		public Criteria andMaxhpIsNotNull() {
			addCriterion("MaxHP is not null");
			return (Criteria) this;
		}

		public Criteria andMaxhpEqualTo(Integer value) {
			addCriterion("MaxHP =", value, "maxhp");
			return (Criteria) this;
		}

		public Criteria andMaxhpNotEqualTo(Integer value) {
			addCriterion("MaxHP <>", value, "maxhp");
			return (Criteria) this;
		}

		public Criteria andMaxhpGreaterThan(Integer value) {
			addCriterion("MaxHP >", value, "maxhp");
			return (Criteria) this;
		}

		public Criteria andMaxhpGreaterThanOrEqualTo(Integer value) {
			addCriterion("MaxHP >=", value, "maxhp");
			return (Criteria) this;
		}

		public Criteria andMaxhpLessThan(Integer value) {
			addCriterion("MaxHP <", value, "maxhp");
			return (Criteria) this;
		}

		public Criteria andMaxhpLessThanOrEqualTo(Integer value) {
			addCriterion("MaxHP <=", value, "maxhp");
			return (Criteria) this;
		}

		public Criteria andMaxhpIn(List<Integer> values) {
			addCriterion("MaxHP in", values, "maxhp");
			return (Criteria) this;
		}

		public Criteria andMaxhpNotIn(List<Integer> values) {
			addCriterion("MaxHP not in", values, "maxhp");
			return (Criteria) this;
		}

		public Criteria andMaxhpBetween(Integer value1, Integer value2) {
			addCriterion("MaxHP between", value1, value2, "maxhp");
			return (Criteria) this;
		}

		public Criteria andMaxhpNotBetween(Integer value1, Integer value2) {
			addCriterion("MaxHP not between", value1, value2, "maxhp");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedIsNull() {
			addCriterion("MinMoveSpeed is null");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedIsNotNull() {
			addCriterion("MinMoveSpeed is not null");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedEqualTo(Integer value) {
			addCriterion("MinMoveSpeed =", value, "minmovespeed");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedNotEqualTo(Integer value) {
			addCriterion("MinMoveSpeed <>", value, "minmovespeed");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedGreaterThan(Integer value) {
			addCriterion("MinMoveSpeed >", value, "minmovespeed");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedGreaterThanOrEqualTo(Integer value) {
			addCriterion("MinMoveSpeed >=", value, "minmovespeed");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedLessThan(Integer value) {
			addCriterion("MinMoveSpeed <", value, "minmovespeed");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedLessThanOrEqualTo(Integer value) {
			addCriterion("MinMoveSpeed <=", value, "minmovespeed");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedIn(List<Integer> values) {
			addCriterion("MinMoveSpeed in", values, "minmovespeed");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedNotIn(List<Integer> values) {
			addCriterion("MinMoveSpeed not in", values, "minmovespeed");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedBetween(Integer value1, Integer value2) {
			addCriterion("MinMoveSpeed between", value1, value2, "minmovespeed");
			return (Criteria) this;
		}

		public Criteria andMinmovespeedNotBetween(Integer value1, Integer value2) {
			addCriterion("MinMoveSpeed not between", value1, value2, "minmovespeed");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedIsNull() {
			addCriterion("MaxMoveSpeed is null");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedIsNotNull() {
			addCriterion("MaxMoveSpeed is not null");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedEqualTo(Integer value) {
			addCriterion("MaxMoveSpeed =", value, "maxmovespeed");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedNotEqualTo(Integer value) {
			addCriterion("MaxMoveSpeed <>", value, "maxmovespeed");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedGreaterThan(Integer value) {
			addCriterion("MaxMoveSpeed >", value, "maxmovespeed");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedGreaterThanOrEqualTo(Integer value) {
			addCriterion("MaxMoveSpeed >=", value, "maxmovespeed");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedLessThan(Integer value) {
			addCriterion("MaxMoveSpeed <", value, "maxmovespeed");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedLessThanOrEqualTo(Integer value) {
			addCriterion("MaxMoveSpeed <=", value, "maxmovespeed");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedIn(List<Integer> values) {
			addCriterion("MaxMoveSpeed in", values, "maxmovespeed");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedNotIn(List<Integer> values) {
			addCriterion("MaxMoveSpeed not in", values, "maxmovespeed");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedBetween(Integer value1, Integer value2) {
			addCriterion("MaxMoveSpeed between", value1, value2, "maxmovespeed");
			return (Criteria) this;
		}

		public Criteria andMaxmovespeedNotBetween(Integer value1, Integer value2) {
			addCriterion("MaxMoveSpeed not between", value1, value2, "maxmovespeed");
			return (Criteria) this;
		}

		public Criteria andIconIsNull() {
			addCriterion("Icon is null");
			return (Criteria) this;
		}

		public Criteria andIconIsNotNull() {
			addCriterion("Icon is not null");
			return (Criteria) this;
		}

		public Criteria andIconEqualTo(String value) {
			addCriterion("Icon =", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconNotEqualTo(String value) {
			addCriterion("Icon <>", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconGreaterThan(String value) {
			addCriterion("Icon >", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconGreaterThanOrEqualTo(String value) {
			addCriterion("Icon >=", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconLessThan(String value) {
			addCriterion("Icon <", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconLessThanOrEqualTo(String value) {
			addCriterion("Icon <=", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconLike(String value) {
			addCriterion("Icon like", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconNotLike(String value) {
			addCriterion("Icon not like", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconIn(List<String> values) {
			addCriterion("Icon in", values, "icon");
			return (Criteria) this;
		}

		public Criteria andIconNotIn(List<String> values) {
			addCriterion("Icon not in", values, "icon");
			return (Criteria) this;
		}

		public Criteria andIconBetween(String value1, String value2) {
			addCriterion("Icon between", value1, value2, "icon");
			return (Criteria) this;
		}

		public Criteria andIconNotBetween(String value1, String value2) {
			addCriterion("Icon not between", value1, value2, "icon");
			return (Criteria) this;
		}

		public Criteria andForgetimeIsNull() {
			addCriterion("ForgeTime is null");
			return (Criteria) this;
		}

		public Criteria andForgetimeIsNotNull() {
			addCriterion("ForgeTime is not null");
			return (Criteria) this;
		}

		public Criteria andForgetimeEqualTo(BigDecimal value) {
			addCriterion("ForgeTime =", value, "forgetime");
			return (Criteria) this;
		}

		public Criteria andForgetimeNotEqualTo(BigDecimal value) {
			addCriterion("ForgeTime <>", value, "forgetime");
			return (Criteria) this;
		}

		public Criteria andForgetimeGreaterThan(BigDecimal value) {
			addCriterion("ForgeTime >", value, "forgetime");
			return (Criteria) this;
		}

		public Criteria andForgetimeGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("ForgeTime >=", value, "forgetime");
			return (Criteria) this;
		}

		public Criteria andForgetimeLessThan(BigDecimal value) {
			addCriterion("ForgeTime <", value, "forgetime");
			return (Criteria) this;
		}

		public Criteria andForgetimeLessThanOrEqualTo(BigDecimal value) {
			addCriterion("ForgeTime <=", value, "forgetime");
			return (Criteria) this;
		}

		public Criteria andForgetimeIn(List<BigDecimal> values) {
			addCriterion("ForgeTime in", values, "forgetime");
			return (Criteria) this;
		}

		public Criteria andForgetimeNotIn(List<BigDecimal> values) {
			addCriterion("ForgeTime not in", values, "forgetime");
			return (Criteria) this;
		}

		public Criteria andForgetimeBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ForgeTime between", value1, value2, "forgetime");
			return (Criteria) this;
		}

		public Criteria andForgetimeNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("ForgeTime not between", value1, value2, "forgetime");
			return (Criteria) this;
		}

		public Criteria andDescriptionIsNull() {
			addCriterion("Description is null");
			return (Criteria) this;
		}

		public Criteria andDescriptionIsNotNull() {
			addCriterion("Description is not null");
			return (Criteria) this;
		}

		public Criteria andDescriptionEqualTo(String value) {
			addCriterion("Description =", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotEqualTo(String value) {
			addCriterion("Description <>", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionGreaterThan(String value) {
			addCriterion("Description >", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("Description >=", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLessThan(String value) {
			addCriterion("Description <", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLessThanOrEqualTo(String value) {
			addCriterion("Description <=", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLike(String value) {
			addCriterion("Description like", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotLike(String value) {
			addCriterion("Description not like", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionIn(List<String> values) {
			addCriterion("Description in", values, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotIn(List<String> values) {
			addCriterion("Description not in", values, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionBetween(String value1, String value2) {
			addCriterion("Description between", value1, value2, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotBetween(String value1, String value2) {
			addCriterion("Description not between", value1, value2, "description");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_s_equiptype
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mt_s_equiptype
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}