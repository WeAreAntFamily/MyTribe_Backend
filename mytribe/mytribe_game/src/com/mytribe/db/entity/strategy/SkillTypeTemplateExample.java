package com.mytribe.db.entity.strategy;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class SkillTypeTemplateExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	public SkillTypeTemplateExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andStarIsNull() {
			addCriterion("Star is null");
			return (Criteria) this;
		}

		public Criteria andStarIsNotNull() {
			addCriterion("Star is not null");
			return (Criteria) this;
		}

		public Criteria andStarEqualTo(Integer value) {
			addCriterion("Star =", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarNotEqualTo(Integer value) {
			addCriterion("Star <>", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarGreaterThan(Integer value) {
			addCriterion("Star >", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarGreaterThanOrEqualTo(Integer value) {
			addCriterion("Star >=", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarLessThan(Integer value) {
			addCriterion("Star <", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarLessThanOrEqualTo(Integer value) {
			addCriterion("Star <=", value, "star");
			return (Criteria) this;
		}

		public Criteria andStarIn(List<Integer> values) {
			addCriterion("Star in", values, "star");
			return (Criteria) this;
		}

		public Criteria andStarNotIn(List<Integer> values) {
			addCriterion("Star not in", values, "star");
			return (Criteria) this;
		}

		public Criteria andStarBetween(Integer value1, Integer value2) {
			addCriterion("Star between", value1, value2, "star");
			return (Criteria) this;
		}

		public Criteria andStarNotBetween(Integer value1, Integer value2) {
			addCriterion("Star not between", value1, value2, "star");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("\"Name\" is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("\"Name\" is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("\"Name\" =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("\"Name\" <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("\"Name\" >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("\"Name\" >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("\"Name\" <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("\"Name\" <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("\"Name\" like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("\"Name\" not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("\"Name\" in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("\"Name\" not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("\"Name\" between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("\"Name\" not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidIsNull() {
			addCriterion("AttackTypeID is null");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidIsNotNull() {
			addCriterion("AttackTypeID is not null");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidEqualTo(Integer value) {
			addCriterion("AttackTypeID =", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidNotEqualTo(Integer value) {
			addCriterion("AttackTypeID <>", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidGreaterThan(Integer value) {
			addCriterion("AttackTypeID >", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidGreaterThanOrEqualTo(Integer value) {
			addCriterion("AttackTypeID >=", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidLessThan(Integer value) {
			addCriterion("AttackTypeID <", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidLessThanOrEqualTo(Integer value) {
			addCriterion("AttackTypeID <=", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidIn(List<Integer> values) {
			addCriterion("AttackTypeID in", values, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidNotIn(List<Integer> values) {
			addCriterion("AttackTypeID not in", values, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidBetween(Integer value1, Integer value2) {
			addCriterion("AttackTypeID between", value1, value2, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidNotBetween(Integer value1, Integer value2) {
			addCriterion("AttackTypeID not between", value1, value2, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueIsNull() {
			addCriterion("SkillEffectValue is null");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueIsNotNull() {
			addCriterion("SkillEffectValue is not null");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueEqualTo(BigDecimal value) {
			addCriterion("SkillEffectValue =", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueNotEqualTo(BigDecimal value) {
			addCriterion("SkillEffectValue <>", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueGreaterThan(BigDecimal value) {
			addCriterion("SkillEffectValue >", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("SkillEffectValue >=", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueLessThan(BigDecimal value) {
			addCriterion("SkillEffectValue <", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueLessThanOrEqualTo(BigDecimal value) {
			addCriterion("SkillEffectValue <=", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueIn(List<BigDecimal> values) {
			addCriterion("SkillEffectValue in", values, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueNotIn(List<BigDecimal> values) {
			addCriterion("SkillEffectValue not in", values, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("SkillEffectValue between", value1, value2, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("SkillEffectValue not between", value1, value2, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectIsNull() {
			addCriterion("SpecialEffect is null");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectIsNotNull() {
			addCriterion("SpecialEffect is not null");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectEqualTo(String value) {
			addCriterion("SpecialEffect =", value, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectNotEqualTo(String value) {
			addCriterion("SpecialEffect <>", value, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectGreaterThan(String value) {
			addCriterion("SpecialEffect >", value, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectGreaterThanOrEqualTo(String value) {
			addCriterion("SpecialEffect >=", value, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectLessThan(String value) {
			addCriterion("SpecialEffect <", value, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectLessThanOrEqualTo(String value) {
			addCriterion("SpecialEffect <=", value, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectLike(String value) {
			addCriterion("SpecialEffect like", value, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectNotLike(String value) {
			addCriterion("SpecialEffect not like", value, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectIn(List<String> values) {
			addCriterion("SpecialEffect in", values, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectNotIn(List<String> values) {
			addCriterion("SpecialEffect not in", values, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectBetween(String value1, String value2) {
			addCriterion("SpecialEffect between", value1, value2, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andSpecialeffectNotBetween(String value1, String value2) {
			addCriterion("SpecialEffect not between", value1, value2, "specialeffect");
			return (Criteria) this;
		}

		public Criteria andIconIsNull() {
			addCriterion("Icon is null");
			return (Criteria) this;
		}

		public Criteria andIconIsNotNull() {
			addCriterion("Icon is not null");
			return (Criteria) this;
		}

		public Criteria andIconEqualTo(String value) {
			addCriterion("Icon =", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconNotEqualTo(String value) {
			addCriterion("Icon <>", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconGreaterThan(String value) {
			addCriterion("Icon >", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconGreaterThanOrEqualTo(String value) {
			addCriterion("Icon >=", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconLessThan(String value) {
			addCriterion("Icon <", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconLessThanOrEqualTo(String value) {
			addCriterion("Icon <=", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconLike(String value) {
			addCriterion("Icon like", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconNotLike(String value) {
			addCriterion("Icon not like", value, "icon");
			return (Criteria) this;
		}

		public Criteria andIconIn(List<String> values) {
			addCriterion("Icon in", values, "icon");
			return (Criteria) this;
		}

		public Criteria andIconNotIn(List<String> values) {
			addCriterion("Icon not in", values, "icon");
			return (Criteria) this;
		}

		public Criteria andIconBetween(String value1, String value2) {
			addCriterion("Icon between", value1, value2, "icon");
			return (Criteria) this;
		}

		public Criteria andIconNotBetween(String value1, String value2) {
			addCriterion("Icon not between", value1, value2, "icon");
			return (Criteria) this;
		}

		public Criteria andCdIsNull() {
			addCriterion("CD is null");
			return (Criteria) this;
		}

		public Criteria andCdIsNotNull() {
			addCriterion("CD is not null");
			return (Criteria) this;
		}

		public Criteria andCdEqualTo(BigDecimal value) {
			addCriterion("CD =", value, "cd");
			return (Criteria) this;
		}

		public Criteria andCdNotEqualTo(BigDecimal value) {
			addCriterion("CD <>", value, "cd");
			return (Criteria) this;
		}

		public Criteria andCdGreaterThan(BigDecimal value) {
			addCriterion("CD >", value, "cd");
			return (Criteria) this;
		}

		public Criteria andCdGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("CD >=", value, "cd");
			return (Criteria) this;
		}

		public Criteria andCdLessThan(BigDecimal value) {
			addCriterion("CD <", value, "cd");
			return (Criteria) this;
		}

		public Criteria andCdLessThanOrEqualTo(BigDecimal value) {
			addCriterion("CD <=", value, "cd");
			return (Criteria) this;
		}

		public Criteria andCdIn(List<BigDecimal> values) {
			addCriterion("CD in", values, "cd");
			return (Criteria) this;
		}

		public Criteria andCdNotIn(List<BigDecimal> values) {
			addCriterion("CD not in", values, "cd");
			return (Criteria) this;
		}

		public Criteria andCdBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("CD between", value1, value2, "cd");
			return (Criteria) this;
		}

		public Criteria andCdNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("CD not between", value1, value2, "cd");
			return (Criteria) this;
		}

		public Criteria andRangeIsNull() {
			addCriterion("\"Range\" is null");
			return (Criteria) this;
		}

		public Criteria andRangeIsNotNull() {
			addCriterion("\"Range\" is not null");
			return (Criteria) this;
		}

		public Criteria andRangeEqualTo(BigDecimal value) {
			addCriterion("\"Range\" =", value, "range");
			return (Criteria) this;
		}

		public Criteria andRangeNotEqualTo(BigDecimal value) {
			addCriterion("\"Range\" <>", value, "range");
			return (Criteria) this;
		}

		public Criteria andRangeGreaterThan(BigDecimal value) {
			addCriterion("\"Range\" >", value, "range");
			return (Criteria) this;
		}

		public Criteria andRangeGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("\"Range\" >=", value, "range");
			return (Criteria) this;
		}

		public Criteria andRangeLessThan(BigDecimal value) {
			addCriterion("\"Range\" <", value, "range");
			return (Criteria) this;
		}

		public Criteria andRangeLessThanOrEqualTo(BigDecimal value) {
			addCriterion("\"Range\" <=", value, "range");
			return (Criteria) this;
		}

		public Criteria andRangeIn(List<BigDecimal> values) {
			addCriterion("\"Range\" in", values, "range");
			return (Criteria) this;
		}

		public Criteria andRangeNotIn(List<BigDecimal> values) {
			addCriterion("\"Range\" not in", values, "range");
			return (Criteria) this;
		}

		public Criteria andRangeBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("\"Range\" between", value1, value2, "range");
			return (Criteria) this;
		}

		public Criteria andRangeNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("\"Range\" not between", value1, value2, "range");
			return (Criteria) this;
		}

		public Criteria andDescriptionIsNull() {
			addCriterion("Description is null");
			return (Criteria) this;
		}

		public Criteria andDescriptionIsNotNull() {
			addCriterion("Description is not null");
			return (Criteria) this;
		}

		public Criteria andDescriptionEqualTo(String value) {
			addCriterion("Description =", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotEqualTo(String value) {
			addCriterion("Description <>", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionGreaterThan(String value) {
			addCriterion("Description >", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("Description >=", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLessThan(String value) {
			addCriterion("Description <", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLessThanOrEqualTo(String value) {
			addCriterion("Description <=", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionLike(String value) {
			addCriterion("Description like", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotLike(String value) {
			addCriterion("Description not like", value, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionIn(List<String> values) {
			addCriterion("Description in", values, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotIn(List<String> values) {
			addCriterion("Description not in", values, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionBetween(String value1, String value2) {
			addCriterion("Description between", value1, value2, "description");
			return (Criteria) this;
		}

		public Criteria andDescriptionNotBetween(String value1, String value2) {
			addCriterion("Description not between", value1, value2, "description");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_s_skilltype
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mt_s_skilltype
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}