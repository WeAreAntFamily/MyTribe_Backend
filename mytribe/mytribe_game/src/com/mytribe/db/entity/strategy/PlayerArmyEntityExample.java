package com.mytribe.db.entity.strategy;

import java.util.ArrayList;
import java.util.List;

public class PlayerArmyEntityExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	public PlayerArmyEntityExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andPlayeridIsNull() {
			addCriterion("PlayerID is null");
			return (Criteria) this;
		}

		public Criteria andPlayeridIsNotNull() {
			addCriterion("PlayerID is not null");
			return (Criteria) this;
		}

		public Criteria andPlayeridEqualTo(Integer value) {
			addCriterion("PlayerID =", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridNotEqualTo(Integer value) {
			addCriterion("PlayerID <>", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridGreaterThan(Integer value) {
			addCriterion("PlayerID >", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridGreaterThanOrEqualTo(Integer value) {
			addCriterion("PlayerID >=", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridLessThan(Integer value) {
			addCriterion("PlayerID <", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridLessThanOrEqualTo(Integer value) {
			addCriterion("PlayerID <=", value, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridIn(List<Integer> values) {
			addCriterion("PlayerID in", values, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridNotIn(List<Integer> values) {
			addCriterion("PlayerID not in", values, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridBetween(Integer value1, Integer value2) {
			addCriterion("PlayerID between", value1, value2, "playerid");
			return (Criteria) this;
		}

		public Criteria andPlayeridNotBetween(Integer value1, Integer value2) {
			addCriterion("PlayerID not between", value1, value2, "playerid");
			return (Criteria) this;
		}

		public Criteria andArmyidIsNull() {
			addCriterion("ArmyID is null");
			return (Criteria) this;
		}

		public Criteria andArmyidIsNotNull() {
			addCriterion("ArmyID is not null");
			return (Criteria) this;
		}

		public Criteria andArmyidEqualTo(Integer value) {
			addCriterion("ArmyID =", value, "armyid");
			return (Criteria) this;
		}

		public Criteria andArmyidNotEqualTo(Integer value) {
			addCriterion("ArmyID <>", value, "armyid");
			return (Criteria) this;
		}

		public Criteria andArmyidGreaterThan(Integer value) {
			addCriterion("ArmyID >", value, "armyid");
			return (Criteria) this;
		}

		public Criteria andArmyidGreaterThanOrEqualTo(Integer value) {
			addCriterion("ArmyID >=", value, "armyid");
			return (Criteria) this;
		}

		public Criteria andArmyidLessThan(Integer value) {
			addCriterion("ArmyID <", value, "armyid");
			return (Criteria) this;
		}

		public Criteria andArmyidLessThanOrEqualTo(Integer value) {
			addCriterion("ArmyID <=", value, "armyid");
			return (Criteria) this;
		}

		public Criteria andArmyidIn(List<Integer> values) {
			addCriterion("ArmyID in", values, "armyid");
			return (Criteria) this;
		}

		public Criteria andArmyidNotIn(List<Integer> values) {
			addCriterion("ArmyID not in", values, "armyid");
			return (Criteria) this;
		}

		public Criteria andArmyidBetween(Integer value1, Integer value2) {
			addCriterion("ArmyID between", value1, value2, "armyid");
			return (Criteria) this;
		}

		public Criteria andArmyidNotBetween(Integer value1, Integer value2) {
			addCriterion("ArmyID not between", value1, value2, "armyid");
			return (Criteria) this;
		}

		public Criteria andBuildingidIsNull() {
			addCriterion("BuildingID is null");
			return (Criteria) this;
		}

		public Criteria andBuildingidIsNotNull() {
			addCriterion("BuildingID is not null");
			return (Criteria) this;
		}

		public Criteria andBuildingidEqualTo(Integer value) {
			addCriterion("BuildingID =", value, "buildingid");
			return (Criteria) this;
		}

		public Criteria andBuildingidNotEqualTo(Integer value) {
			addCriterion("BuildingID <>", value, "buildingid");
			return (Criteria) this;
		}

		public Criteria andBuildingidGreaterThan(Integer value) {
			addCriterion("BuildingID >", value, "buildingid");
			return (Criteria) this;
		}

		public Criteria andBuildingidGreaterThanOrEqualTo(Integer value) {
			addCriterion("BuildingID >=", value, "buildingid");
			return (Criteria) this;
		}

		public Criteria andBuildingidLessThan(Integer value) {
			addCriterion("BuildingID <", value, "buildingid");
			return (Criteria) this;
		}

		public Criteria andBuildingidLessThanOrEqualTo(Integer value) {
			addCriterion("BuildingID <=", value, "buildingid");
			return (Criteria) this;
		}

		public Criteria andBuildingidIn(List<Integer> values) {
			addCriterion("BuildingID in", values, "buildingid");
			return (Criteria) this;
		}

		public Criteria andBuildingidNotIn(List<Integer> values) {
			addCriterion("BuildingID not in", values, "buildingid");
			return (Criteria) this;
		}

		public Criteria andBuildingidBetween(Integer value1, Integer value2) {
			addCriterion("BuildingID between", value1, value2, "buildingid");
			return (Criteria) this;
		}

		public Criteria andBuildingidNotBetween(Integer value1, Integer value2) {
			addCriterion("BuildingID not between", value1, value2, "buildingid");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidIsNull() {
			addCriterion("SoldierTypeID is null");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidIsNotNull() {
			addCriterion("SoldierTypeID is not null");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidEqualTo(Integer value) {
			addCriterion("SoldierTypeID =", value, "soldiertypeid");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidNotEqualTo(Integer value) {
			addCriterion("SoldierTypeID <>", value, "soldiertypeid");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidGreaterThan(Integer value) {
			addCriterion("SoldierTypeID >", value, "soldiertypeid");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidGreaterThanOrEqualTo(Integer value) {
			addCriterion("SoldierTypeID >=", value, "soldiertypeid");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidLessThan(Integer value) {
			addCriterion("SoldierTypeID <", value, "soldiertypeid");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidLessThanOrEqualTo(Integer value) {
			addCriterion("SoldierTypeID <=", value, "soldiertypeid");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidIn(List<Integer> values) {
			addCriterion("SoldierTypeID in", values, "soldiertypeid");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidNotIn(List<Integer> values) {
			addCriterion("SoldierTypeID not in", values, "soldiertypeid");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidBetween(Integer value1, Integer value2) {
			addCriterion("SoldierTypeID between", value1, value2, "soldiertypeid");
			return (Criteria) this;
		}

		public Criteria andSoldiertypeidNotBetween(Integer value1, Integer value2) {
			addCriterion("SoldierTypeID not between", value1, value2, "soldiertypeid");
			return (Criteria) this;
		}

		public Criteria andSoldiernumIsNull() {
			addCriterion("SoldierNum is null");
			return (Criteria) this;
		}

		public Criteria andSoldiernumIsNotNull() {
			addCriterion("SoldierNum is not null");
			return (Criteria) this;
		}

		public Criteria andSoldiernumEqualTo(Integer value) {
			addCriterion("SoldierNum =", value, "soldiernum");
			return (Criteria) this;
		}

		public Criteria andSoldiernumNotEqualTo(Integer value) {
			addCriterion("SoldierNum <>", value, "soldiernum");
			return (Criteria) this;
		}

		public Criteria andSoldiernumGreaterThan(Integer value) {
			addCriterion("SoldierNum >", value, "soldiernum");
			return (Criteria) this;
		}

		public Criteria andSoldiernumGreaterThanOrEqualTo(Integer value) {
			addCriterion("SoldierNum >=", value, "soldiernum");
			return (Criteria) this;
		}

		public Criteria andSoldiernumLessThan(Integer value) {
			addCriterion("SoldierNum <", value, "soldiernum");
			return (Criteria) this;
		}

		public Criteria andSoldiernumLessThanOrEqualTo(Integer value) {
			addCriterion("SoldierNum <=", value, "soldiernum");
			return (Criteria) this;
		}

		public Criteria andSoldiernumIn(List<Integer> values) {
			addCriterion("SoldierNum in", values, "soldiernum");
			return (Criteria) this;
		}

		public Criteria andSoldiernumNotIn(List<Integer> values) {
			addCriterion("SoldierNum not in", values, "soldiernum");
			return (Criteria) this;
		}

		public Criteria andSoldiernumBetween(Integer value1, Integer value2) {
			addCriterion("SoldierNum between", value1, value2, "soldiernum");
			return (Criteria) this;
		}

		public Criteria andSoldiernumNotBetween(Integer value1, Integer value2) {
			addCriterion("SoldierNum not between", value1, value2, "soldiernum");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_u_playerarmy
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mt_u_playerarmy
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}