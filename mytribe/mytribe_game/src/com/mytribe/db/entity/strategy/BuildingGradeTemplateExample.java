package com.mytribe.db.entity.strategy;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class BuildingGradeTemplateExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	public BuildingGradeTemplateExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andGradeIsNull() {
			addCriterion("Grade is null");
			return (Criteria) this;
		}

		public Criteria andGradeIsNotNull() {
			addCriterion("Grade is not null");
			return (Criteria) this;
		}

		public Criteria andGradeEqualTo(Integer value) {
			addCriterion("Grade =", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeNotEqualTo(Integer value) {
			addCriterion("Grade <>", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeGreaterThan(Integer value) {
			addCriterion("Grade >", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeGreaterThanOrEqualTo(Integer value) {
			addCriterion("Grade >=", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeLessThan(Integer value) {
			addCriterion("Grade <", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeLessThanOrEqualTo(Integer value) {
			addCriterion("Grade <=", value, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeIn(List<Integer> values) {
			addCriterion("Grade in", values, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeNotIn(List<Integer> values) {
			addCriterion("Grade not in", values, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeBetween(Integer value1, Integer value2) {
			addCriterion("Grade between", value1, value2, "grade");
			return (Criteria) this;
		}

		public Criteria andGradeNotBetween(Integer value1, Integer value2) {
			addCriterion("Grade not between", value1, value2, "grade");
			return (Criteria) this;
		}

		public Criteria andBloodIsNull() {
			addCriterion("Blood is null");
			return (Criteria) this;
		}

		public Criteria andBloodIsNotNull() {
			addCriterion("Blood is not null");
			return (Criteria) this;
		}

		public Criteria andBloodEqualTo(Integer value) {
			addCriterion("Blood =", value, "blood");
			return (Criteria) this;
		}

		public Criteria andBloodNotEqualTo(Integer value) {
			addCriterion("Blood <>", value, "blood");
			return (Criteria) this;
		}

		public Criteria andBloodGreaterThan(Integer value) {
			addCriterion("Blood >", value, "blood");
			return (Criteria) this;
		}

		public Criteria andBloodGreaterThanOrEqualTo(Integer value) {
			addCriterion("Blood >=", value, "blood");
			return (Criteria) this;
		}

		public Criteria andBloodLessThan(Integer value) {
			addCriterion("Blood <", value, "blood");
			return (Criteria) this;
		}

		public Criteria andBloodLessThanOrEqualTo(Integer value) {
			addCriterion("Blood <=", value, "blood");
			return (Criteria) this;
		}

		public Criteria andBloodIn(List<Integer> values) {
			addCriterion("Blood in", values, "blood");
			return (Criteria) this;
		}

		public Criteria andBloodNotIn(List<Integer> values) {
			addCriterion("Blood not in", values, "blood");
			return (Criteria) this;
		}

		public Criteria andBloodBetween(Integer value1, Integer value2) {
			addCriterion("Blood between", value1, value2, "blood");
			return (Criteria) this;
		}

		public Criteria andBloodNotBetween(Integer value1, Integer value2) {
			addCriterion("Blood not between", value1, value2, "blood");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidIsNull() {
			addCriterion("UnlockTypeID is null");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidIsNotNull() {
			addCriterion("UnlockTypeID is not null");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidEqualTo(Integer value) {
			addCriterion("UnlockTypeID =", value, "unlocktypeid");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidNotEqualTo(Integer value) {
			addCriterion("UnlockTypeID <>", value, "unlocktypeid");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidGreaterThan(Integer value) {
			addCriterion("UnlockTypeID >", value, "unlocktypeid");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidGreaterThanOrEqualTo(Integer value) {
			addCriterion("UnlockTypeID >=", value, "unlocktypeid");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidLessThan(Integer value) {
			addCriterion("UnlockTypeID <", value, "unlocktypeid");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidLessThanOrEqualTo(Integer value) {
			addCriterion("UnlockTypeID <=", value, "unlocktypeid");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidIn(List<Integer> values) {
			addCriterion("UnlockTypeID in", values, "unlocktypeid");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidNotIn(List<Integer> values) {
			addCriterion("UnlockTypeID not in", values, "unlocktypeid");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidBetween(Integer value1, Integer value2) {
			addCriterion("UnlockTypeID between", value1, value2, "unlocktypeid");
			return (Criteria) this;
		}

		public Criteria andUnlocktypeidNotBetween(Integer value1, Integer value2) {
			addCriterion("UnlockTypeID not between", value1, value2, "unlocktypeid");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueIsNull() {
			addCriterion("UnlockValue is null");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueIsNotNull() {
			addCriterion("UnlockValue is not null");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueEqualTo(Integer value) {
			addCriterion("UnlockValue =", value, "unlockvalue");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueNotEqualTo(Integer value) {
			addCriterion("UnlockValue <>", value, "unlockvalue");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueGreaterThan(Integer value) {
			addCriterion("UnlockValue >", value, "unlockvalue");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueGreaterThanOrEqualTo(Integer value) {
			addCriterion("UnlockValue >=", value, "unlockvalue");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueLessThan(Integer value) {
			addCriterion("UnlockValue <", value, "unlockvalue");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueLessThanOrEqualTo(Integer value) {
			addCriterion("UnlockValue <=", value, "unlockvalue");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueIn(List<Integer> values) {
			addCriterion("UnlockValue in", values, "unlockvalue");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueNotIn(List<Integer> values) {
			addCriterion("UnlockValue not in", values, "unlockvalue");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueBetween(Integer value1, Integer value2) {
			addCriterion("UnlockValue between", value1, value2, "unlockvalue");
			return (Criteria) this;
		}

		public Criteria andUnlockvalueNotBetween(Integer value1, Integer value2) {
			addCriterion("UnlockValue not between", value1, value2, "unlockvalue");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnIsNull() {
			addCriterion("DefaultColumn is null");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnIsNotNull() {
			addCriterion("DefaultColumn is not null");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnEqualTo(Integer value) {
			addCriterion("DefaultColumn =", value, "defaultcolumn");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnNotEqualTo(Integer value) {
			addCriterion("DefaultColumn <>", value, "defaultcolumn");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnGreaterThan(Integer value) {
			addCriterion("DefaultColumn >", value, "defaultcolumn");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnGreaterThanOrEqualTo(Integer value) {
			addCriterion("DefaultColumn >=", value, "defaultcolumn");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnLessThan(Integer value) {
			addCriterion("DefaultColumn <", value, "defaultcolumn");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnLessThanOrEqualTo(Integer value) {
			addCriterion("DefaultColumn <=", value, "defaultcolumn");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnIn(List<Integer> values) {
			addCriterion("DefaultColumn in", values, "defaultcolumn");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnNotIn(List<Integer> values) {
			addCriterion("DefaultColumn not in", values, "defaultcolumn");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnBetween(Integer value1, Integer value2) {
			addCriterion("DefaultColumn between", value1, value2, "defaultcolumn");
			return (Criteria) this;
		}

		public Criteria andDefaultcolumnNotBetween(Integer value1, Integer value2) {
			addCriterion("DefaultColumn not between", value1, value2, "defaultcolumn");
			return (Criteria) this;
		}

		public Criteria andOutputspeedIsNull() {
			addCriterion("OutputSpeed is null");
			return (Criteria) this;
		}

		public Criteria andOutputspeedIsNotNull() {
			addCriterion("OutputSpeed is not null");
			return (Criteria) this;
		}

		public Criteria andOutputspeedEqualTo(Integer value) {
			addCriterion("OutputSpeed =", value, "outputspeed");
			return (Criteria) this;
		}

		public Criteria andOutputspeedNotEqualTo(Integer value) {
			addCriterion("OutputSpeed <>", value, "outputspeed");
			return (Criteria) this;
		}

		public Criteria andOutputspeedGreaterThan(Integer value) {
			addCriterion("OutputSpeed >", value, "outputspeed");
			return (Criteria) this;
		}

		public Criteria andOutputspeedGreaterThanOrEqualTo(Integer value) {
			addCriterion("OutputSpeed >=", value, "outputspeed");
			return (Criteria) this;
		}

		public Criteria andOutputspeedLessThan(Integer value) {
			addCriterion("OutputSpeed <", value, "outputspeed");
			return (Criteria) this;
		}

		public Criteria andOutputspeedLessThanOrEqualTo(Integer value) {
			addCriterion("OutputSpeed <=", value, "outputspeed");
			return (Criteria) this;
		}

		public Criteria andOutputspeedIn(List<Integer> values) {
			addCriterion("OutputSpeed in", values, "outputspeed");
			return (Criteria) this;
		}

		public Criteria andOutputspeedNotIn(List<Integer> values) {
			addCriterion("OutputSpeed not in", values, "outputspeed");
			return (Criteria) this;
		}

		public Criteria andOutputspeedBetween(Integer value1, Integer value2) {
			addCriterion("OutputSpeed between", value1, value2, "outputspeed");
			return (Criteria) this;
		}

		public Criteria andOutputspeedNotBetween(Integer value1, Integer value2) {
			addCriterion("OutputSpeed not between", value1, value2, "outputspeed");
			return (Criteria) this;
		}

		public Criteria andMaxoutputIsNull() {
			addCriterion("MaxOutput is null");
			return (Criteria) this;
		}

		public Criteria andMaxoutputIsNotNull() {
			addCriterion("MaxOutput is not null");
			return (Criteria) this;
		}

		public Criteria andMaxoutputEqualTo(Integer value) {
			addCriterion("MaxOutput =", value, "maxoutput");
			return (Criteria) this;
		}

		public Criteria andMaxoutputNotEqualTo(Integer value) {
			addCriterion("MaxOutput <>", value, "maxoutput");
			return (Criteria) this;
		}

		public Criteria andMaxoutputGreaterThan(Integer value) {
			addCriterion("MaxOutput >", value, "maxoutput");
			return (Criteria) this;
		}

		public Criteria andMaxoutputGreaterThanOrEqualTo(Integer value) {
			addCriterion("MaxOutput >=", value, "maxoutput");
			return (Criteria) this;
		}

		public Criteria andMaxoutputLessThan(Integer value) {
			addCriterion("MaxOutput <", value, "maxoutput");
			return (Criteria) this;
		}

		public Criteria andMaxoutputLessThanOrEqualTo(Integer value) {
			addCriterion("MaxOutput <=", value, "maxoutput");
			return (Criteria) this;
		}

		public Criteria andMaxoutputIn(List<Integer> values) {
			addCriterion("MaxOutput in", values, "maxoutput");
			return (Criteria) this;
		}

		public Criteria andMaxoutputNotIn(List<Integer> values) {
			addCriterion("MaxOutput not in", values, "maxoutput");
			return (Criteria) this;
		}

		public Criteria andMaxoutputBetween(Integer value1, Integer value2) {
			addCriterion("MaxOutput between", value1, value2, "maxoutput");
			return (Criteria) this;
		}

		public Criteria andMaxoutputNotBetween(Integer value1, Integer value2) {
			addCriterion("MaxOutput not between", value1, value2, "maxoutput");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidIsNull() {
			addCriterion("AttackTypeID is null");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidIsNotNull() {
			addCriterion("AttackTypeID is not null");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidEqualTo(Integer value) {
			addCriterion("AttackTypeID =", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidNotEqualTo(Integer value) {
			addCriterion("AttackTypeID <>", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidGreaterThan(Integer value) {
			addCriterion("AttackTypeID >", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidGreaterThanOrEqualTo(Integer value) {
			addCriterion("AttackTypeID >=", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidLessThan(Integer value) {
			addCriterion("AttackTypeID <", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidLessThanOrEqualTo(Integer value) {
			addCriterion("AttackTypeID <=", value, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidIn(List<Integer> values) {
			addCriterion("AttackTypeID in", values, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidNotIn(List<Integer> values) {
			addCriterion("AttackTypeID not in", values, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidBetween(Integer value1, Integer value2) {
			addCriterion("AttackTypeID between", value1, value2, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andAttacktypeidNotBetween(Integer value1, Integer value2) {
			addCriterion("AttackTypeID not between", value1, value2, "attacktypeid");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueIsNull() {
			addCriterion("SkillEffectValue is null");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueIsNotNull() {
			addCriterion("SkillEffectValue is not null");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueEqualTo(BigDecimal value) {
			addCriterion("SkillEffectValue =", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueNotEqualTo(BigDecimal value) {
			addCriterion("SkillEffectValue <>", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueGreaterThan(BigDecimal value) {
			addCriterion("SkillEffectValue >", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("SkillEffectValue >=", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueLessThan(BigDecimal value) {
			addCriterion("SkillEffectValue <", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueLessThanOrEqualTo(BigDecimal value) {
			addCriterion("SkillEffectValue <=", value, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueIn(List<BigDecimal> values) {
			addCriterion("SkillEffectValue in", values, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueNotIn(List<BigDecimal> values) {
			addCriterion("SkillEffectValue not in", values, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("SkillEffectValue between", value1, value2, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andSkilleffectvalueNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("SkillEffectValue not between", value1, value2, "skilleffectvalue");
			return (Criteria) this;
		}

		public Criteria andExpIsNull() {
			addCriterion("\"Exp\" is null");
			return (Criteria) this;
		}

		public Criteria andExpIsNotNull() {
			addCriterion("\"Exp\" is not null");
			return (Criteria) this;
		}

		public Criteria andExpEqualTo(Integer value) {
			addCriterion("\"Exp\" =", value, "exp");
			return (Criteria) this;
		}

		public Criteria andExpNotEqualTo(Integer value) {
			addCriterion("\"Exp\" <>", value, "exp");
			return (Criteria) this;
		}

		public Criteria andExpGreaterThan(Integer value) {
			addCriterion("\"Exp\" >", value, "exp");
			return (Criteria) this;
		}

		public Criteria andExpGreaterThanOrEqualTo(Integer value) {
			addCriterion("\"Exp\" >=", value, "exp");
			return (Criteria) this;
		}

		public Criteria andExpLessThan(Integer value) {
			addCriterion("\"Exp\" <", value, "exp");
			return (Criteria) this;
		}

		public Criteria andExpLessThanOrEqualTo(Integer value) {
			addCriterion("\"Exp\" <=", value, "exp");
			return (Criteria) this;
		}

		public Criteria andExpIn(List<Integer> values) {
			addCriterion("\"Exp\" in", values, "exp");
			return (Criteria) this;
		}

		public Criteria andExpNotIn(List<Integer> values) {
			addCriterion("\"Exp\" not in", values, "exp");
			return (Criteria) this;
		}

		public Criteria andExpBetween(Integer value1, Integer value2) {
			addCriterion("\"Exp\" between", value1, value2, "exp");
			return (Criteria) this;
		}

		public Criteria andExpNotBetween(Integer value1, Integer value2) {
			addCriterion("\"Exp\" not between", value1, value2, "exp");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_s_buildinggrade
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mt_s_buildinggrade
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}