package com.mytribe.db.entity.strategy;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class MainRoleBaseInfoTemplateExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	public MainRoleBaseInfoTemplateExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andMainroleidIsNull() {
			addCriterion("MainRoleID is null");
			return (Criteria) this;
		}

		public Criteria andMainroleidIsNotNull() {
			addCriterion("MainRoleID is not null");
			return (Criteria) this;
		}

		public Criteria andMainroleidEqualTo(Integer value) {
			addCriterion("MainRoleID =", value, "mainroleid");
			return (Criteria) this;
		}

		public Criteria andMainroleidNotEqualTo(Integer value) {
			addCriterion("MainRoleID <>", value, "mainroleid");
			return (Criteria) this;
		}

		public Criteria andMainroleidGreaterThan(Integer value) {
			addCriterion("MainRoleID >", value, "mainroleid");
			return (Criteria) this;
		}

		public Criteria andMainroleidGreaterThanOrEqualTo(Integer value) {
			addCriterion("MainRoleID >=", value, "mainroleid");
			return (Criteria) this;
		}

		public Criteria andMainroleidLessThan(Integer value) {
			addCriterion("MainRoleID <", value, "mainroleid");
			return (Criteria) this;
		}

		public Criteria andMainroleidLessThanOrEqualTo(Integer value) {
			addCriterion("MainRoleID <=", value, "mainroleid");
			return (Criteria) this;
		}

		public Criteria andMainroleidIn(List<Integer> values) {
			addCriterion("MainRoleID in", values, "mainroleid");
			return (Criteria) this;
		}

		public Criteria andMainroleidNotIn(List<Integer> values) {
			addCriterion("MainRoleID not in", values, "mainroleid");
			return (Criteria) this;
		}

		public Criteria andMainroleidBetween(Integer value1, Integer value2) {
			addCriterion("MainRoleID between", value1, value2, "mainroleid");
			return (Criteria) this;
		}

		public Criteria andMainroleidNotBetween(Integer value1, Integer value2) {
			addCriterion("MainRoleID not between", value1, value2, "mainroleid");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("\"Name\" is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("\"Name\" is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("\"Name\" =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("\"Name\" <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("\"Name\" >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("\"Name\" >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("\"Name\" <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("\"Name\" <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("\"Name\" like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("\"Name\" not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("\"Name\" in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("\"Name\" not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("\"Name\" between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("\"Name\" not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andAttackspeedIsNull() {
			addCriterion("AttackSpeed is null");
			return (Criteria) this;
		}

		public Criteria andAttackspeedIsNotNull() {
			addCriterion("AttackSpeed is not null");
			return (Criteria) this;
		}

		public Criteria andAttackspeedEqualTo(BigDecimal value) {
			addCriterion("AttackSpeed =", value, "attackspeed");
			return (Criteria) this;
		}

		public Criteria andAttackspeedNotEqualTo(BigDecimal value) {
			addCriterion("AttackSpeed <>", value, "attackspeed");
			return (Criteria) this;
		}

		public Criteria andAttackspeedGreaterThan(BigDecimal value) {
			addCriterion("AttackSpeed >", value, "attackspeed");
			return (Criteria) this;
		}

		public Criteria andAttackspeedGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("AttackSpeed >=", value, "attackspeed");
			return (Criteria) this;
		}

		public Criteria andAttackspeedLessThan(BigDecimal value) {
			addCriterion("AttackSpeed <", value, "attackspeed");
			return (Criteria) this;
		}

		public Criteria andAttackspeedLessThanOrEqualTo(BigDecimal value) {
			addCriterion("AttackSpeed <=", value, "attackspeed");
			return (Criteria) this;
		}

		public Criteria andAttackspeedIn(List<BigDecimal> values) {
			addCriterion("AttackSpeed in", values, "attackspeed");
			return (Criteria) this;
		}

		public Criteria andAttackspeedNotIn(List<BigDecimal> values) {
			addCriterion("AttackSpeed not in", values, "attackspeed");
			return (Criteria) this;
		}

		public Criteria andAttackspeedBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("AttackSpeed between", value1, value2, "attackspeed");
			return (Criteria) this;
		}

		public Criteria andAttackspeedNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("AttackSpeed not between", value1, value2, "attackspeed");
			return (Criteria) this;
		}

		public Criteria andAttackIsNull() {
			addCriterion("Attack is null");
			return (Criteria) this;
		}

		public Criteria andAttackIsNotNull() {
			addCriterion("Attack is not null");
			return (Criteria) this;
		}

		public Criteria andAttackEqualTo(Integer value) {
			addCriterion("Attack =", value, "attack");
			return (Criteria) this;
		}

		public Criteria andAttackNotEqualTo(Integer value) {
			addCriterion("Attack <>", value, "attack");
			return (Criteria) this;
		}

		public Criteria andAttackGreaterThan(Integer value) {
			addCriterion("Attack >", value, "attack");
			return (Criteria) this;
		}

		public Criteria andAttackGreaterThanOrEqualTo(Integer value) {
			addCriterion("Attack >=", value, "attack");
			return (Criteria) this;
		}

		public Criteria andAttackLessThan(Integer value) {
			addCriterion("Attack <", value, "attack");
			return (Criteria) this;
		}

		public Criteria andAttackLessThanOrEqualTo(Integer value) {
			addCriterion("Attack <=", value, "attack");
			return (Criteria) this;
		}

		public Criteria andAttackIn(List<Integer> values) {
			addCriterion("Attack in", values, "attack");
			return (Criteria) this;
		}

		public Criteria andAttackNotIn(List<Integer> values) {
			addCriterion("Attack not in", values, "attack");
			return (Criteria) this;
		}

		public Criteria andAttackBetween(Integer value1, Integer value2) {
			addCriterion("Attack between", value1, value2, "attack");
			return (Criteria) this;
		}

		public Criteria andAttackNotBetween(Integer value1, Integer value2) {
			addCriterion("Attack not between", value1, value2, "attack");
			return (Criteria) this;
		}

		public Criteria andHpIsNull() {
			addCriterion("HP is null");
			return (Criteria) this;
		}

		public Criteria andHpIsNotNull() {
			addCriterion("HP is not null");
			return (Criteria) this;
		}

		public Criteria andHpEqualTo(Integer value) {
			addCriterion("HP =", value, "hp");
			return (Criteria) this;
		}

		public Criteria andHpNotEqualTo(Integer value) {
			addCriterion("HP <>", value, "hp");
			return (Criteria) this;
		}

		public Criteria andHpGreaterThan(Integer value) {
			addCriterion("HP >", value, "hp");
			return (Criteria) this;
		}

		public Criteria andHpGreaterThanOrEqualTo(Integer value) {
			addCriterion("HP >=", value, "hp");
			return (Criteria) this;
		}

		public Criteria andHpLessThan(Integer value) {
			addCriterion("HP <", value, "hp");
			return (Criteria) this;
		}

		public Criteria andHpLessThanOrEqualTo(Integer value) {
			addCriterion("HP <=", value, "hp");
			return (Criteria) this;
		}

		public Criteria andHpIn(List<Integer> values) {
			addCriterion("HP in", values, "hp");
			return (Criteria) this;
		}

		public Criteria andHpNotIn(List<Integer> values) {
			addCriterion("HP not in", values, "hp");
			return (Criteria) this;
		}

		public Criteria andHpBetween(Integer value1, Integer value2) {
			addCriterion("HP between", value1, value2, "hp");
			return (Criteria) this;
		}

		public Criteria andHpNotBetween(Integer value1, Integer value2) {
			addCriterion("HP not between", value1, value2, "hp");
			return (Criteria) this;
		}

		public Criteria andMovespeedIsNull() {
			addCriterion("MoveSpeed is null");
			return (Criteria) this;
		}

		public Criteria andMovespeedIsNotNull() {
			addCriterion("MoveSpeed is not null");
			return (Criteria) this;
		}

		public Criteria andMovespeedEqualTo(Integer value) {
			addCriterion("MoveSpeed =", value, "movespeed");
			return (Criteria) this;
		}

		public Criteria andMovespeedNotEqualTo(Integer value) {
			addCriterion("MoveSpeed <>", value, "movespeed");
			return (Criteria) this;
		}

		public Criteria andMovespeedGreaterThan(Integer value) {
			addCriterion("MoveSpeed >", value, "movespeed");
			return (Criteria) this;
		}

		public Criteria andMovespeedGreaterThanOrEqualTo(Integer value) {
			addCriterion("MoveSpeed >=", value, "movespeed");
			return (Criteria) this;
		}

		public Criteria andMovespeedLessThan(Integer value) {
			addCriterion("MoveSpeed <", value, "movespeed");
			return (Criteria) this;
		}

		public Criteria andMovespeedLessThanOrEqualTo(Integer value) {
			addCriterion("MoveSpeed <=", value, "movespeed");
			return (Criteria) this;
		}

		public Criteria andMovespeedIn(List<Integer> values) {
			addCriterion("MoveSpeed in", values, "movespeed");
			return (Criteria) this;
		}

		public Criteria andMovespeedNotIn(List<Integer> values) {
			addCriterion("MoveSpeed not in", values, "movespeed");
			return (Criteria) this;
		}

		public Criteria andMovespeedBetween(Integer value1, Integer value2) {
			addCriterion("MoveSpeed between", value1, value2, "movespeed");
			return (Criteria) this;
		}

		public Criteria andMovespeedNotBetween(Integer value1, Integer value2) {
			addCriterion("MoveSpeed not between", value1, value2, "movespeed");
			return (Criteria) this;
		}

		public Criteria andMaxgradeIsNull() {
			addCriterion("MaxGrade is null");
			return (Criteria) this;
		}

		public Criteria andMaxgradeIsNotNull() {
			addCriterion("MaxGrade is not null");
			return (Criteria) this;
		}

		public Criteria andMaxgradeEqualTo(Integer value) {
			addCriterion("MaxGrade =", value, "maxgrade");
			return (Criteria) this;
		}

		public Criteria andMaxgradeNotEqualTo(Integer value) {
			addCriterion("MaxGrade <>", value, "maxgrade");
			return (Criteria) this;
		}

		public Criteria andMaxgradeGreaterThan(Integer value) {
			addCriterion("MaxGrade >", value, "maxgrade");
			return (Criteria) this;
		}

		public Criteria andMaxgradeGreaterThanOrEqualTo(Integer value) {
			addCriterion("MaxGrade >=", value, "maxgrade");
			return (Criteria) this;
		}

		public Criteria andMaxgradeLessThan(Integer value) {
			addCriterion("MaxGrade <", value, "maxgrade");
			return (Criteria) this;
		}

		public Criteria andMaxgradeLessThanOrEqualTo(Integer value) {
			addCriterion("MaxGrade <=", value, "maxgrade");
			return (Criteria) this;
		}

		public Criteria andMaxgradeIn(List<Integer> values) {
			addCriterion("MaxGrade in", values, "maxgrade");
			return (Criteria) this;
		}

		public Criteria andMaxgradeNotIn(List<Integer> values) {
			addCriterion("MaxGrade not in", values, "maxgrade");
			return (Criteria) this;
		}

		public Criteria andMaxgradeBetween(Integer value1, Integer value2) {
			addCriterion("MaxGrade between", value1, value2, "maxgrade");
			return (Criteria) this;
		}

		public Criteria andMaxgradeNotBetween(Integer value1, Integer value2) {
			addCriterion("MaxGrade not between", value1, value2, "maxgrade");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table mt_s_mainrolebaseinfo
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mt_s_mainrolebaseinfo
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}